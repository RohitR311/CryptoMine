{"version":3,"sources":["components/Footer.js","constants/coinConstants.js","constants/userConstants.js","components/Header.js","actions/userActions.js","constants/categoryConstants.js","components/Category.js","components/Tabs.js","components/Loader.js","screens/CategoryScreen.js","actions/categoryAction.js","components/ChartProg.js","components/ErrorMessage.js","actions/coinActions.js","components/PredictionInput.js","screens/CoinScreen.js","components/Coin.js","screens/HomeScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/PredictionOutScreen.js","components/Prediction.js","screens/PredictionScreen.js","screens/RegisterScreen.js","screens/UserEditScreen.js","screens/UserListScreen.js","screens/WatchListScreen.js","App.js","reportWebVitals.js","store.js","reducers/userReducer.js","reducers/coinReducers.js","reducers/categoryReducers.js","index.js"],"names":["Footer","Container","Row","Col","className","Date","getFullYear","COIN_DATA_REQUEST","COIN_DATA_SUCCESS","COIN_DATA_FAILURE","FAV_COIN_DATA_REQUEST","FAV_COIN_DATA_SUCCESS","FAV_COIN_DATA_FAILURE","CRYPTO_COIN_DATA_REQUEST","CRYPTO_COIN_DATA_SUCCESS","CRYPTO_COIN_DATA_FAILURE","COIN_INFO_REQUEST","COIN_INFO_SUCCESS","COIN_INFO_FAILURE","GET_FAV_COINS","REMOVE_FAV_COIN","DELETE_FAV_COINS","FAV_COINS","GET_CRYPTO_COINS","GET_CRYPTO_COIN","GET_PREDICTION","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAILURE","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAILURE","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAILURE","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAILURE","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAILURE","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAILURE","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAILURE","USER_UPDATE_RESET","Header","userInfo","useSelector","state","userLogin","history","useHistory","dispatch","useDispatch","Navbar","bg","variant","expand","collapseOnSelect","to","Brand","Nav","Link","href","Toggle","Collapse","id","NavDropdown","title","name","Item","onClick","window","confirm","type","localStorage","removeItem","push","isAdmin","CATEGORY_DATA_REQUEST","CATEGORY_DATA_SUCCESS","CATEGORY_DATA_FAILURE","Category","_id","sr","marketcap","pricechange24h","volume","getSymbolFromCurrency","toLocaleString","toFixed","Tabs","active","style","width","display","justifyContent","alignItems","Loader","Spinner","animation","role","height","margin","CategoryScreen","useState","category","setCategory","sortType","setSortType","search","setSearch","global","setGlobal","filteredCategory","setFilteredCategories","categoryList","loading","categories","useEffect","a","axios","get","data","payload","response","detail","message","map","cat","i","filterCategory","filter","toLowerCase","includes","fetchData","columns","sortColumn","sortKey","newCategory","sort","b","relValA","relValB","Form","Control","placeholder","onChange","e","target","value","Table","striped","hover","responsive","size","key","market_cap_change_24h","market_cap","volume_24h","ChartProg","dataprog","crypto","color","legend","stepped","fill","labels","price","datasets","label","JSON","stringify","backgroundColor","borderColor","radius","borderWidth","options","interaction","intersect","plugins","scales","x","y","ErrorMessage","children","Alert","getCoinById","getCryptoCoins","getFavCoins","getState","config","headers","Authorization","token","updateFavCoins","coin","post","MyVerticallyCenteredModal","props","date","setDate","openPrice","setOpenPrice","closePrice","setClosePrice","setVolume","crypto_coin","cryptoCoins","Modal","centered","closeButton","padding","borderRadius","Title","textAlign","fontSize","Body","onSubmit","preventDefault","file_n","date_p","open_p","close_p","file","getCryptoCoinPrediction","document","querySelector","click","pathname","Group","controlId","Label","required","step","pattern","Check","Button","PredictionInput","coin_id","modalShow","setModalShow","getCoinId","show","onHide","CoinScreen","match","crypto_coins","isFav","setIsFav","predictable","setPredictable","cryptoCoin","error","fav_coins","favCoins","redirectToLogin","params","console","log","length","md","src","image","large","alt","symbol","market_cap_rank","lg","marginBottom","market_data","usd","total_volume","ath","atl","paddingRight","price_change_percentage_7d","sparkline_7d","description","en","marginTop","split","current_price","price_change_24h","high_24h","low_24h","total_supply","community_score","liquidity_score","Coin","pricechange7d","circulatingsupply","graphdata","code","HomeScreen","page","setPage","currencyCode","setCurrencyCode","pageSize","setPageSize","coinList","coins","filteredCoins","setFilteredCoins","currency","listCoins","filterCoins","fav","newFilteredCoins","flexWrap","Dropdown","Menu","class","price_change_percentage_24h","price_change_percentage_7d_in_currency","circulating_supply","sparkline_in_7d","Pagination","count","Math","floor","_","showFirstButton","showLastButton","FormContainer","xs","LoginScreen","location","email","setEmail","password","setPassword","redirect","username","setItem","login","PredictionOutScreen","setCoin","crypto_pred","cryptolist","cryptoCoinsList","useLocation","getCoin","Prediction","PredictionScreen","cryptocoin","Array","prototype","call","item","join","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","UserEditScreen","userId","setIsAdmin","userDetails","user","userUpdate","errorUpdate","loadingUpdate","successUpdate","success","Number","put","updateUser","marginLeft","checked","UserListScreen","userList","users","deleteSuccess","userDelete","deleteHandler","delete","deleteUser","bordered","WatchListScreen","watchList","watchlist","favcoin","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","userUpdateProfile","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3a81bc5d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>Copyright &copy; CryptoMine, {new Date().getFullYear()}.</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","export const COIN_DATA_REQUEST = \"COIN_DATA_REQUEST\";\r\nexport const COIN_DATA_SUCCESS = \"COIN_DATA_SUCCESS\";\r\nexport const COIN_DATA_FAILURE = \"COIN_DATA_FAILURE\";\r\n\r\nexport const FAV_COIN_DATA_REQUEST = \"FAV_COIN_DATA_REQUEST\";\r\nexport const FAV_COIN_DATA_SUCCESS = \"FAV_COIN_DATA_SUCCESS\";\r\nexport const FAV_COIN_DATA_FAILURE = \"FAV_COIN_DATA_FAILURE\";\r\n\r\nexport const CRYPTO_COIN_DATA_REQUEST = \"CRYPTO_COIN_DATA_REQUEST\";\r\nexport const CRYPTO_COIN_DATA_SUCCESS = \"CRYPTO_COIN_DATA_SUCCESS\";\r\nexport const CRYPTO_COIN_DATA_FAILURE = \"CRYPTO_COIN_DATA_FAILURE\";\r\n\r\nexport const COIN_INFO_REQUEST = \"COIN_INFO_REQUEST\";\r\nexport const COIN_INFO_SUCCESS = \"COIN_INFO_SUCCESS\";\r\nexport const COIN_INFO_FAILURE = \"COIN_INFO_FAILURE\";\r\n\r\nexport const GET_FAV_COINS = \"GET_FAV_COINS\";\r\nexport const REMOVE_FAV_COIN = \"REMOVE_FAV_COIN\";\r\nexport const DELETE_FAV_COINS = \"DELETE_FAV_COINS\";\r\nexport const FAV_COINS = \"FAV_COINS\";\r\n\r\nexport const GET_CRYPTO_COINS = \"GET_CRYPTO_COINS\";\r\nexport const GET_CRYPTO_COIN = \"GET_CRYPTO_COIN\";\r\n\r\nexport const GET_PREDICTION = \"GET_PREDICTION\";\r\n\r\n\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAILURE = \"USER_LOGIN_FAILURE\";\r\n\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAILURE = \"USER_REGISTER_FAILURE\";\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAILURE = 'USER_DETAILS_FAILURE'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAILURE = 'USER_UPDATE_PROFILE_FAILURE'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAILURE = 'USER_LIST_FAILURE'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAILURE = 'USER_DELETE_FAILURE'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAILURE = 'USER_UPDATE_FAILURE'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n","import React from \"react\";\r\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport \"../styles/Header.css\";\r\n\r\nconst Header = () => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutHandler = () => {\r\n    if (window.confirm(\"Are you sure you wanna logout?\")) {\r\n      dispatch(logout());\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>CryptoMine</Navbar.Brand>\r\n          </LinkContainer>\r\n          {userInfo ? (\r\n            <LinkContainer className=\"watchlist\" to=\"/watchlist\">\r\n              <Nav.Link className=\"watchlist-btn\" href=\"/watchlist\">\r\n                Watchlist\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"nav\">\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"username\">\r\n                  {/* <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer> */}\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer className=\"login\" to=\"/login\">\r\n                  <Nav.Link href=\"/login\">Login</Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n\r\n              {userInfo ? (\r\n                <></>\r\n              ) : (\r\n                <LinkContainer className=\"signup\" to=\"/register\">\r\n                  <Nav.Link className=\"register-btn\" href=\"/register\">\r\n                    Sign up\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title=\"Admin\" id=\"adminmenue\">\r\n                  <LinkContainer to=\"/admin/userlist\">\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\nimport { DELETE_FAV_COINS } from \"../constants/coinConstants\";\r\nimport {\r\n  USER_DETAILS_FAILURE,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAILURE,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAILURE,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAILURE,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAILURE,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAILURE,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAILURE,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/login/\",\r\n      {\r\n        username: email,\r\n        password: password,\r\n      },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: USER_LIST_RESET });\r\n  dispatch({ type: DELETE_FAV_COINS });\r\n  localStorage.removeItem(\"userInfo\");\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/register/\",\r\n      {\r\n        name: name,\r\n        email: email,\r\n        password: password,\r\n      },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DETAILS_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/id/${id}/`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/users/profile/update/`,\r\n      user,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_LIST_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/`, config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LIST_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DELETE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(`/api/users/delete/${id}/`, config);\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/users/update/${user._id}/`,\r\n      user,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","export const CATEGORY_DATA_REQUEST = \"CATEGORY_DATA_REQUEST\";\r\nexport const CATEGORY_DATA_SUCCESS = \"CATEGORY_DATA_SUCCESS\";\r\nexport const CATEGORY_DATA_FAILURE = \"CATEGORY_DATA_FAILURE\";","import React from \"react\";\r\nimport getSymbolFromCurrency from \"currency-symbol-map\";\r\nimport \"../styles/HomeScreen.css\";\r\n\r\nconst Category = ({ _id, sr, name, marketcap, pricechange24h, volume }) => {\r\n  return (\r\n    <tr key={_id}>\r\n      <td>{sr + 1}</td>\r\n      <td className=\"coin\">\r\n        <span>{name}</span> &nbsp;\r\n      </td>\r\n      <td>\r\n        {getSymbolFromCurrency(\"USD\")}\r\n        {marketcap?.toLocaleString()}\r\n      </td>\r\n      {pricechange24h < 0 ? (\r\n        <td className=\"coin-percent red\">{pricechange24h?.toFixed(2)}%</td>\r\n      ) : (\r\n        <td className=\"coin-percent green\">{pricechange24h?.toFixed(2)}%</td>\r\n      )}\r\n      <td>\r\n        {getSymbolFromCurrency(\"USD\")}\r\n        {volume?.toLocaleString()}\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/Tabs.css\";\r\n\r\nconst Tabs = ({ active }) => {\r\n  return (\r\n    <div style={{ width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\r\n      <div\r\n        className=\"links\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Link\r\n          className={\r\n            active === \"cryptocurrencies\" ? \"tab-link active\" : \"tab-link\"\r\n          }\r\n          to=\"\"\r\n        >\r\n          CryptoCurrencies\r\n        </Link>\r\n        <Link\r\n          className={active === \"category\" ? \"tab-link active\" : \"tab-link\"}\r\n          to=\"/category\"\r\n        >\r\n          Category\r\n        </Link>\r\n        <Link\r\n          className={active === \"prediction\" ? \"tab-link active\" : \"tab-link\"}\r\n          to=\"/predict\"\r\n        >\r\n          Prediction\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      variant=\"dark\"\r\n      style={{\r\n        height: \"80px\",\r\n        width: \"80px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { listCategories } from \"../actions/categoryAction\";\r\nimport Category from \"../components/Category\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Tabs from \"../components/Tabs\";\r\nimport Loader from \"../components/Loader\";\r\nimport { Form, Table } from \"react-bootstrap\";\r\n\r\nimport \"../styles/CategoryScreen.css\";\r\n\r\nconst CategoryScreen = () => {\r\n  const [category, setCategory] = useState([]);\r\n  const [sortType, setSortType] = useState(\"Asc\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const [global, setGlobal] = useState({});\r\n  const [filteredCategory, setFilteredCategories] = useState([]);\r\n\r\n  const categoryList = useSelector((state) => state.categoryList);\r\n  const { loading, categories } = categoryList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listCategories());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    setCategory(categories);\r\n  }, [categories]);\r\n\r\n  categories.map((cat, i) => {\r\n    return (cat[\"key\"] = i);\r\n  });\r\n\r\n  useEffect(() => {\r\n    let filterCategory = category.filter((category) =>\r\n      category.name.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n    setFilteredCategories(filterCategory);\r\n  }, [category, search]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { data } = await axios.get(\r\n        \"https://api.coingecko.com/api/v3/global\"\r\n      );\r\n      setGlobal(data.data);\r\n    };\r\n\r\n    fetchData()\r\n  }, [categories, category]);\r\n\r\n  const columns = [\r\n    \"name\",\r\n    \"market_cap\",\r\n    \"market_cap_change_24h\",\r\n    \"volume_24h\",\r\n    \"key\",\r\n  ];\r\n\r\n  const sortColumn = (i) => {\r\n    let sortKey = columns[i];\r\n    let newCategory = [...category];\r\n    if (sortType === \"Asc\") {\r\n      newCategory.sort((a, b) => {\r\n        const relValA = a[sortKey];\r\n        const relValB = b[sortKey];\r\n\r\n        if (relValA < relValB) return -1;\r\n        if (relValA > relValB) return 1;\r\n        return 0;\r\n      });\r\n      setSortType(\"Desc\");\r\n    } else {\r\n      newCategory.sort((a, b) => {\r\n        const relValA = a[sortKey];\r\n        const relValB = b[sortKey];\r\n\r\n        if (relValA > relValB) return -1;\r\n        if (relValA < relValB) return 1;\r\n        return 0;\r\n      });\r\n      setSortType(\"Asc\");\r\n    }\r\n    setCategory(newCategory);\r\n  };\r\n\r\n  return (\r\n    <div className=\"category-app\">\r\n      <div className=\"category-search\">\r\n        <h2 className=\"category-text\">\r\n          Cryptocurrency Category by 24h Price Change\r\n        </h2>\r\n        <p className=\"category-global\">\r\n          The total active cryptocurrencies are{\" \"}\r\n          {global[\"active_cryptocurrencies\"]}, a{\" \"}\r\n          {global[\"market_cap_change_percentage_24h_usd\"] < 0 ? (\r\n            <span className=\"category-percent red\">\r\n              {global[\"market_cap_change_percentage_24h_usd\"]?.toFixed(2)}%{\" \"}\r\n            </span>\r\n          ) : (\r\n            <span className=\"category-percent green\">\r\n              {global[\"market_cap_change_percentage_24h_usd\"]?.toFixed(2)}%{\" \"}\r\n            </span>\r\n          )}\r\n          change over the last day.\r\n        </p>\r\n        <Form className=\"search-box d-flex\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"q\"\r\n            placeholder=\"Search\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            className=\"search-bar\"\r\n          ></Form.Control>\r\n        </Form>\r\n      </div>\r\n      <Tabs active=\"category\" />\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <Table striped hover responsive size=\"lg\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(4)}>\r\n                  #\r\n                </th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(0)}>\r\n                  Name\r\n                </th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(1)}>\r\n                  Market Cap\r\n                </th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(2)}>\r\n                  24h%\r\n                </th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(3)}>\r\n                  Volume(24h)\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredCategory.map((category) => {\r\n                return (\r\n                  <Category\r\n                    _id={category.id}\r\n                    sr={category.key}\r\n                    key={category.id}\r\n                    pricechange24h={category.market_cap_change_24h}\r\n                    name={category.name}\r\n                    marketcap={category.market_cap}\r\n                    volume={category.volume_24h}\r\n                  />\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryScreen;\r\n","import {\r\n  CATEGORY_DATA_FAILURE,\r\n  CATEGORY_DATA_REQUEST,\r\n  CATEGORY_DATA_SUCCESS,\r\n} from \"../constants/categoryConstants\";\r\n\r\nimport axios from \"axios\";\r\n\r\nexport const listCategories = () => async dispatch => {\r\n  try {\r\n    dispatch({ type: CATEGORY_DATA_REQUEST });\r\n\r\n    const { data } = await axios.get(\r\n      `https://api.coingecko.com/api/v3/coins/categories`\r\n    );\r\n\r\n    dispatch({\r\n      type: CATEGORY_DATA_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CATEGORY_DATA_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n\r\nconst ChartProg = ({\r\n  dataprog,\r\n  crypto,\r\n  color,\r\n  legend = true,\r\n  stepped = false,\r\n  fill = true,\r\n}) => {\r\n  const data = {\r\n    labels: dataprog?.price,\r\n    datasets: [\r\n      {\r\n        label: JSON.stringify(crypto),\r\n        data: dataprog?.price,\r\n        fill: fill,\r\n        stepped: stepped,\r\n        backgroundColor:\r\n          color === \"red\" ? \"rgb(255,0,0,0.2)\" : \"rgb(0,128,0,0.2)\",\r\n        borderColor: color === \"red\" ? \"rgb(255,0,0)\" : \"rgb(0,128,0)\",\r\n        radius: 0,\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n    options: {\r\n      interaction: {\r\n        intersect: false,\r\n      },\r\n      plugins: {\r\n        legend: legend,\r\n      },\r\n      scales: {\r\n        x: {\r\n          display: false,\r\n        },\r\n\r\n        y: {\r\n          display: legend,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      <Line data={data} options={data.options} height=\"75\" width=\"150\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartProg;\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst ErrorMessage = ({children, variant}) => {\r\n  return (\r\n    <Alert variant={variant}>\r\n      <p>\r\n        {children}\r\n      </p>\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import {\r\n  COIN_DATA_FAILURE,\r\n  COIN_DATA_REQUEST,\r\n  COIN_DATA_SUCCESS,\r\n  COIN_INFO_FAILURE,\r\n  COIN_INFO_REQUEST,\r\n  COIN_INFO_SUCCESS,\r\n  CRYPTO_COIN_DATA_FAILURE,\r\n  CRYPTO_COIN_DATA_REQUEST,\r\n  CRYPTO_COIN_DATA_SUCCESS,\r\n  FAV_COINS,\r\n  FAV_COIN_DATA_FAILURE,\r\n  FAV_COIN_DATA_REQUEST,\r\n  FAV_COIN_DATA_SUCCESS,\r\n  GET_CRYPTO_COIN,\r\n  GET_CRYPTO_COINS,\r\n  GET_FAV_COINS,\r\n  GET_PREDICTION,\r\n  REMOVE_FAV_COIN,\r\n} from \"../constants/coinConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const listCoins = (page, currency, pageSize) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: COIN_DATA_REQUEST });\r\n\r\n    const { data } = await axios.get(\r\n      `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=market_cap_desc&per_page=${pageSize}&page=${page}&sparkline=true&price_change_percentage=7d`\r\n    );\r\n\r\n    dispatch({\r\n      type: COIN_DATA_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: COIN_DATA_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\nexport const getCoinById = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: COIN_INFO_REQUEST });\r\n\r\n    const { data } = await axios.get(\r\n      `https://api.coingecko.com/api/v3/coins/${id}?sparkline=true`\r\n    );\r\n\r\n    dispatch({\r\n      type: COIN_INFO_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: COIN_INFO_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listFavCoins = (currency, favcoin) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: FAV_COIN_DATA_REQUEST });\r\n\r\n    const fav_coins = Array.prototype.map\r\n      .call(favcoin, function (item) {\r\n        return item.coin;\r\n      })\r\n      .join(\",\");\r\n\r\n    const { data } = await axios.get(\r\n      `https://api.coingecko.com/api/v3/coins/markets?ids=${fav_coins}&vs_currency=${currency}&order=market_cap_desc&sparkline=true&price_change_percentage=7d`\r\n    );\r\n\r\n    dispatch({\r\n      type: FAV_COIN_DATA_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: FAV_COIN_DATA_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listCryptoCoins = (currency, cryptocoin) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CRYPTO_COIN_DATA_REQUEST });\r\n\r\n    const crypto_coins = Array.prototype.map\r\n      .call(cryptocoin, function (item) {\r\n        return item.name;\r\n      })\r\n      .join(\",\");\r\n\r\n    const { data } = await axios.get(\r\n      `https://api.coingecko.com/api/v3/coins/markets?ids=${crypto_coins}&vs_currency=${currency}&order=market_cap_desc&sparkline=true&price_change_percentage=7d`\r\n    );\r\n\r\n    dispatch({\r\n      type: CRYPTO_COIN_DATA_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CRYPTO_COIN_DATA_FAILURE,\r\n      payload:\r\n        error.response && error.response.data.detail\r\n          ? error.response.data.detail\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getCryptoCoins = () => async (dispatch) => {\r\n  const { data } = await axios.get(`http://127.0.0.1:8000/api/users/cryptos/`);\r\n\r\n  dispatch({ type: GET_CRYPTO_COINS, payload: data });\r\n};\r\n\r\nexport const getCryptoCoinById = (id) => async (dispatch) => {\r\n  const { data } = await axios.get(`http://127.0.0.1:8000/api/users/${id}/`);\r\n\r\n  dispatch({ type: GET_CRYPTO_COIN, payload: data });\r\n};\r\n\r\nexport const getCryptoCoinPrediction =\r\n  (file_n, date_p, open_p, close_p, volume) => async (dispatch) => {\r\n    const { data } = await axios.post(\r\n      `http://127.0.0.1:8000/api/users/myprediction/`,\r\n      {\r\n        file: file_n,\r\n        date_p: date_p,\r\n        open_p: open_p,\r\n        close_p: close_p,\r\n        volume: volume,\r\n      }\r\n    );\r\n\r\n    dispatch({ type: GET_PREDICTION, payload: data });\r\n  };\r\n\r\nexport const getFavCoins = () => async (dispatch, getState) => {\r\n  const {\r\n    userLogin: { userInfo },\r\n  } = getState();\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: `Bearer ${userInfo.token}`,\r\n    },\r\n  };\r\n\r\n  const { data } = await axios.get(\r\n    `http://127.0.0.1:8000/api/users/mywatchlist/`,\r\n    config\r\n  );\r\n\r\n  dispatch({ type: GET_FAV_COINS, payload: data });\r\n};\r\n\r\nexport const updateFavCoins = (coin) => async (dispatch, getState) => {\r\n  const {\r\n    userLogin: { userInfo },\r\n  } = getState();\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: `Bearer ${userInfo.token}`,\r\n    },\r\n  };\r\n\r\n  const { data } = await axios.post(\r\n    `http://127.0.0.1:8000/api/users/create/`,\r\n    {\r\n      coin: coin,\r\n    },\r\n    config\r\n  );\r\n\r\n  if (data !== \"Coin was deleted successfully\")\r\n    dispatch({ type: FAV_COINS, payload: data });\r\n  else dispatch({ type: REMOVE_FAV_COIN, payload: coin });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Button, Form, Modal, Alert } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n  getCryptoCoinById,\r\n  getCryptoCoinPrediction,\r\n} from \"../actions/coinActions\";\r\n\r\n\r\nfunction MyVerticallyCenteredModal(props) {\r\n  // const [predShow, setPredShow] = useState(false);\r\n  const [date, setDate] = useState(\"\");\r\n  const [openPrice, setOpenPrice] = useState();\r\n  const [closePrice, setClosePrice] = useState();\r\n  const [volume, setVolume] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const cryptoCoins = useSelector((state) => state.cryptoCoins);\r\n  const { crypto_coin } = cryptoCoins;\r\n\r\n  const OnClose = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      getCryptoCoinPrediction(\r\n        crypto_coin[\"csv_file\"],\r\n        date,\r\n        openPrice,\r\n        closePrice,\r\n        volume\r\n      )\r\n    );\r\n\r\n    setOpenPrice(\"\");\r\n    setClosePrice(\"\");\r\n    setVolume(\"\");\r\n\r\n    document.querySelector(\".btn-close\").click();\r\n    history.push({ pathname: \"/prediction\", state: { date, openPrice, closePrice, volume } });\r\n  };\r\n  return (\r\n    <>\r\n      <Modal\r\n        {...props}\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Alert variant=\"dark\">\r\n          <Modal.Header\r\n            closeButton\r\n            style={{ padding: \"0\", borderRadius: \"360px\" }}\r\n            id=\"pred1\"\r\n          >\r\n            <Modal.Title\r\n              id=\"contained-modal-title-vcenter\"\r\n              style={{ width: \"100%\", textAlign: \"center\" }}\r\n            >\r\n              <h4 style={{ fontSize: \"2.3rem\" }}>Prediction</h4>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n        </Alert>\r\n        <Modal.Body>\r\n          <Form onSubmit={OnClose}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label>Date</Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                placeholder=\"\"\r\n                onChange={(e) => setDate(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicnumber\">\r\n              <Form.Label>Open Price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                step=\"any\"\r\n                pattern=\"([0-9][\\,?])+([\\.,][0-9]+)?\"\r\n                placeholder=\"\"\r\n                value={openPrice}\r\n                onChange={(e) => setOpenPrice(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicnumber\">\r\n              <Form.Label>Close Price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                step=\"any\"\r\n                pattern=\"([0-9][\\,?])+([\\.,][0-9]+)?\"\r\n                placeholder=\"\"\r\n                value={closePrice}\r\n                onChange={(e) => setClosePrice(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicnumber\">\r\n              <Form.Label>Volume</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                step=\"any\"\r\n                pattern=\"([0-9][\\,?])+([\\.,][0-9]+)?\"\r\n                placeholder=\"\"\r\n                value={volume}\r\n                onChange={(e) => setVolume(e.target.value)}\r\n                required\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n              <Form.Check type=\"checkbox\" label=\"T&C*\" required />\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst PredictionInput = ({ coin_id }) => {\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const getCoinId = (coin_id) => {\r\n    setModalShow(true);\r\n    dispatch(getCryptoCoinById(coin_id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={() => getCoinId(coin_id)}>\r\n        Predict\r\n      </Button>\r\n\r\n      <MyVerticallyCenteredModal\r\n        show={modalShow}\r\n        className=\"submit\"\r\n        onHide={() => setModalShow(false)}\r\n        dispatch={dispatch}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PredictionInput;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../components/Loader\";\r\nimport ChartProg from \"../components/ChartProg\";\r\nimport getSymbolFromCurrency from \"currency-symbol-map\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\nimport { Alert, Col, Row, Table } from \"react-bootstrap\";\r\nimport {\r\n  getCoinById,\r\n  getCryptoCoins,\r\n  getFavCoins,\r\n  updateFavCoins,\r\n} from \"../actions/coinActions\";\r\nimport \"../styles/CoinScreen.css\";\r\nimport PredictionInput from \"../components/PredictionInput\";\r\nimport { useHistory } from \"react-router\";\r\nimport StarOutlineIcon from \"@material-ui/icons/StarOutline\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\n\r\nconst CoinScreen = ({ match }) => {\r\n  const cryptoCoins = useSelector((state) => state.cryptoCoins);\r\n  const { crypto_coins } = cryptoCoins;\r\n  const dispatch = useDispatch();\r\n\r\n  const [isFav, setIsFav] = useState(false);\r\n  const [predictable, setPredictable] = useState(false);\r\n\r\n  const cryptoCoin = useSelector((state) => state.cryptoCoin);\r\n  const { loading, error, crypto } = cryptoCoin;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const history = useHistory();\r\n\r\n  const favCoins = useSelector((state) => state.favCoins);\r\n  const { fav_coins } = favCoins;\r\n\r\n  const redirectToLogin = () => {\r\n    if (userInfo) dispatch(updateFavCoins(match.params.id));\r\n    else history.push(\"/login\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    for (let i of crypto_coins) {\r\n      if (i.name === match.params.id) {\r\n        setPredictable(true);\r\n        break;\r\n      } else setPredictable(false);\r\n    }\r\n  }, [crypto_coins]);\r\n\r\n  useEffect(() => {\r\n    if (userInfo) dispatch(getFavCoins());\r\n    dispatch(getCryptoCoins());\r\n  }, [dispatch]);\r\n\r\n  console.log(fav_coins);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCoinById(match.params.id));\r\n  }, [dispatch, match.params.id]);\r\n\r\n  useEffect(() => {\r\n    if (fav_coins.length) {\r\n      for (let fav of fav_coins) {\r\n        if (fav.coin === match.params.id) {\r\n          setIsFav(true);\r\n        } else {\r\n          setIsFav(false);\r\n        }\r\n      }\r\n    }\r\n  }, [match.params.id, fav_coins]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <ErrorMessage variant=\"danger\">{error}</ErrorMessage>\r\n      ) : (\r\n        <>\r\n          <Row className=\"coin-info\">\r\n            <Col md=\"9\">\r\n              <Row>\r\n                <Col md=\"auto\">\r\n                  <img src={crypto?.image?.large} alt=\"\" />\r\n                </Col>\r\n                <Col md=\"auto\">\r\n                  <h2>\r\n                    {crypto?.name}{\" \"}\r\n                    <span className=\"symbol\">({crypto?.symbol})</span>\r\n                  </h2>\r\n                </Col>\r\n                <Col md=\"auto\">\r\n                  <div className=\"coin-star\">\r\n                    {!isFav ? (\r\n                      <StarOutlineIcon onClick={() => redirectToLogin()} />\r\n                    ) : (\r\n                      <StarIcon onClick={() => redirectToLogin()} />\r\n                    )}\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md=\"auto\">\r\n                  <small className=\"coin-data\">\r\n                    Rank #{crypto?.market_cap_rank}\r\n                  </small>{\" \"}\r\n                  &nbsp;\r\n                </Col>\r\n                <Col md=\"auto\">\r\n                  <small className=\"coin-data\">Coin</small>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row lg=\"4\" style={{ marginBottom: \"30px\" }}>\r\n            <Col style={{ padding: \"10px\" }}>\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"#E2E5E4\",\r\n                  padding: \"10px\",\r\n                  borderRadius: \"15px\",\r\n                }}\r\n              >\r\n                <Row>\r\n                  <h4>Market Cap</h4>\r\n                </Row>\r\n                <Row>\r\n                  <p style={{ textAlign: \"left\" }}>\r\n                    {getSymbolFromCurrency(\"usd\")}\r\n                    {crypto?.market_data?.market_cap?.usd?.toLocaleString()}\r\n                  </p>\r\n                </Row>\r\n              </div>\r\n            </Col>\r\n            <Col style={{ padding: \"10px\" }}>\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"#E2E5E4\",\r\n                  padding: \"10px\",\r\n                  borderRadius: \"15px\",\r\n                }}\r\n              >\r\n                <Row>\r\n                  <h4>Volume</h4>\r\n                </Row>\r\n                <Row>\r\n                  <p style={{ textAlign: \"left\" }}>\r\n                    {getSymbolFromCurrency(\"usd\")}\r\n                    {crypto?.market_data?.total_volume?.usd?.toLocaleString()}\r\n                  </p>\r\n                </Row>\r\n              </div>\r\n            </Col>\r\n            <Col style={{ padding: \"10px\" }}>\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"#E2E5E4\",\r\n                  padding: \"10px\",\r\n                  borderRadius: \"15px\",\r\n                }}\r\n              >\r\n                <Row>\r\n                  <h4>All Time High</h4>\r\n                </Row>\r\n                <Row>\r\n                  <p style={{ textAlign: \"left\" }}>\r\n                    {getSymbolFromCurrency(\"usd\")}\r\n                    {crypto?.market_data?.ath?.usd?.toLocaleString()}\r\n                  </p>\r\n                </Row>\r\n              </div>\r\n            </Col>\r\n            <Col style={{ padding: \"10px\" }}>\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"#E2E5E4\",\r\n                  padding: \"10px\",\r\n                  borderRadius: \"15px\",\r\n                }}\r\n              >\r\n                <Row>\r\n                  <h4>All Time Low</h4>\r\n                </Row>\r\n                <Row>\r\n                  <p style={{ textAlign: \"left\" }}>\r\n                    {getSymbolFromCurrency(\"usd\")}\r\n                    {crypto?.market_data?.atl?.usd?.toLocaleString()}\r\n                  </p>\r\n                </Row>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md=\"8\" style={{ paddingRight: \"40px\" }}>\r\n              <Row>\r\n                <h3>{crypto?.name} to USD</h3>\r\n                {crypto?.market_data?.price_change_percentage_7d < 0 ? (\r\n                  <ChartProg\r\n                    dataprog={crypto?.market_data?.sparkline_7d}\r\n                    crypto={crypto?.name}\r\n                    color=\"red\"\r\n                    legend={true}\r\n                  />\r\n                ) : (\r\n                  <ChartProg\r\n                    dataprog={crypto?.market_data?.sparkline_7d}\r\n                    crypto={crypto?.name}\r\n                    color=\"green\"\r\n                    legend={true}\r\n                  />\r\n                )}\r\n              </Row>\r\n              {crypto?.description?.en == \"\" ? (\r\n                <></>\r\n              ) : (\r\n                <Row style={{ marginTop: \"10px\" }}>\r\n                  <h3>\r\n                    What is {crypto?.name}{\" \"}\r\n                    <span className=\"symbol-desc\">({crypto?.symbol})?</span>\r\n                  </h3>\r\n                  <br />\r\n                  <p className=\"coin-description\">\r\n                    {crypto?.description?.en.split(\".\", 6)}.\r\n                  </p>\r\n                </Row>\r\n              )}\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <Row>\r\n                <Alert variant=\"info\">\r\n                  <h2>\r\n                    Price : {getSymbolFromCurrency(\"usd\")}\r\n                    {crypto?.market_data?.current_price?.usd?.toLocaleString()}\r\n                  </h2>\r\n                </Alert>\r\n              </Row>\r\n              <Row>\r\n                <h2>{crypto?.name} Stats</h2>\r\n                <Table>\r\n                  <tr>\r\n                    <td>24 Hour Price Change</td>\r\n                    <td>\r\n                      <b>\r\n                        {getSymbolFromCurrency(\"usd\")}\r\n                        {crypto?.market_data?.price_change_24h}\r\n                      </b>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Daily High</td>\r\n                    <td>\r\n                      <b>\r\n                        {getSymbolFromCurrency(\"usd\")}\r\n                        {crypto?.market_data?.high_24h?.usd?.toLocaleString()}\r\n                      </b>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Daily Low</td>\r\n                    <td>\r\n                      <b>\r\n                        {getSymbolFromCurrency(\"usd\")}\r\n                        {crypto?.market_data?.low_24h?.usd?.toLocaleString()}\r\n                      </b>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Total supply</td>\r\n                    <td>\r\n                      <b>\r\n                        {crypto?.market_data?.total_supply?.toLocaleString()}{\" \"}\r\n                        <span className=\"symbol\">{crypto?.symbol}</span>\r\n                      </b>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Total Volume</td>\r\n                    <td>\r\n                      <b>\r\n                        {getSymbolFromCurrency(\"usd\")}\r\n                        {crypto?.market_data?.total_volume?.usd?.toLocaleString()}\r\n                      </b>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>24 Hour Marketcap change</td>\r\n                    <td>\r\n                      <b>\r\n                        {getSymbolFromCurrency(\"usd\")}\r\n                        {crypto?.market_data?.market_cap_change_24h}\r\n                      </b>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Community Score</td>\r\n                    <td>\r\n                      <b>{crypto?.community_score}</b>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Liquidity Score</td>\r\n                    <td>\r\n                      <b>{crypto?.liquidity_score}</b>\r\n                    </td>\r\n                  </tr>\r\n                </Table>\r\n              </Row>\r\n              <Row>\r\n                {predictable ? <PredictionInput coin_id={crypto?.id} /> : null}\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CoinScreen;\r\n","import React from \"react\";\r\nimport \"../styles/Coin.css\";\r\nimport ChartProg from \"./ChartProg\";\r\nimport getSymbolFromCurrency from \"currency-symbol-map\";\r\nimport StarOutlineIcon from \"@material-ui/icons/StarOutline\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport { getCoinById, updateFavCoins } from \"../actions/coinActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\n// import \"../starability.min.css\";\r\n\r\nconst Coin = ({\r\n  name,\r\n  price,\r\n  symbol,\r\n  marketcap,\r\n  volume,\r\n  image,\r\n  pricechange24h,\r\n  pricechange7d,\r\n  _id,\r\n  circulatingsupply,\r\n  graphdata,\r\n  code,\r\n  coin_id,\r\n  isFav,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const history = useHistory();\r\n  const redirectToLogin = () => {\r\n    if (userInfo) dispatch(updateFavCoins(coin_id));\r\n    else history.push(\"/login\");\r\n  };\r\n  // const getCryptoId = (id) => {\r\n  //   dispatch(getCoinById(id));\r\n  // };\r\n  return (\r\n    <tr key={_id}>\r\n      <td className=\"starability\">\r\n        {!isFav ? (\r\n          <StarOutlineIcon onClick={() => redirectToLogin()} />\r\n        ) : (\r\n          <StarIcon onClick={() => redirectToLogin()} />\r\n        )}\r\n      </td>\r\n      <td>{_id}</td>\r\n      <td className=\"coin\">\r\n        <img src={image} alt=\"\" />\r\n        <Link to={`/crypto/${coin_id}`}>\r\n          <span className=\"coin-name\">{name}</span>\r\n        </Link>{\" \"}\r\n        &nbsp; <span className=\"mt-1\">{symbol}</span>\r\n      </td>\r\n      <td>\r\n        {getSymbolFromCurrency(code)}\r\n        {price?.toLocaleString()}\r\n      </td>\r\n      {pricechange24h < 0 ? (\r\n        <td className=\"coin-percent red\">{pricechange24h?.toFixed(2)}%</td>\r\n      ) : (\r\n        <td className=\"coin-percent green\">{pricechange24h?.toFixed(2)}%</td>\r\n      )}\r\n      {pricechange7d < 0 ? (\r\n        <td className=\"coin-percent red\">{pricechange7d?.toFixed(2)}%</td>\r\n      ) : (\r\n        <td className=\"coin-percent green\">{pricechange7d?.toFixed(2)}%</td>\r\n      )}\r\n      <td>\r\n        {getSymbolFromCurrency(code)}\r\n        {marketcap?.toLocaleString()}\r\n      </td>\r\n      <td>\r\n        {getSymbolFromCurrency(code)}\r\n        {volume?.toLocaleString()}\r\n      </td>\r\n\r\n      <td className=\"coin-supply\">\r\n        {circulatingsupply?.toLocaleString()} <span>{symbol}</span>\r\n      </td>\r\n\r\n      {pricechange7d < 0 ? (\r\n        <td>\r\n          <ChartProg dataprog={graphdata} crypto={name} color=\"red\" legend={false}  />\r\n        </td>\r\n      ) : (\r\n        <td>\r\n          <ChartProg dataprog={graphdata} crypto={name} color=\"green\" legend={false} />\r\n        </td>\r\n      )}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Coin;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Coin from \"../components/Coin\";\r\nimport \"../styles/HomeScreen.css\";\r\nimport { Dropdown, Form, Table } from \"react-bootstrap\";\r\nimport { getCoinById, getFavCoins, listCoins } from \"../actions/coinActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SelectCurrency from \"react-select-currency\";\r\n// import { Link } from \"react-router-dom\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport Tabs from \"../components/Tabs\";\r\nimport axios from \"axios\";\r\n\r\nfunction HomeScreen() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [currencyCode, setCurrencyCode] = useState(\"USD\");\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const dispatch = useDispatch();\r\n  const coinList = useSelector((state) => state.coinList);\r\n  const { error, loading, coins } = coinList;\r\n\r\n  const favCoins = useSelector((state) => state.favCoins);\r\n  const { fav_coins } = favCoins;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [sortType, setSortType] = useState(\"Asc\");\r\n  const [filteredCoins, setFilteredCoins] = useState([]);\r\n\r\n  const [global, setGlobal] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (userInfo) dispatch(getFavCoins());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(listCoins(page, currencyCode, pageSize));\r\n  }, [dispatch, page, currencyCode, pageSize]);\r\n\r\n  useEffect(() => {\r\n    for (let coin of coins) {\r\n      coin[\"isFav\"] = false;\r\n    }\r\n    setFilteredCoins(coins);\r\n  }, [userInfo, fav_coins]);\r\n\r\n  useEffect(() => {\r\n    let filterCoins = coins.filter((coin) =>\r\n      coin.name.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n\r\n    if (fav_coins.length) {\r\n      for (let fav of fav_coins) {\r\n        for (let coin of filterCoins) {\r\n          if (fav.coin === coin.id) {\r\n            coin[\"isFav\"] = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    setFilteredCoins(filterCoins);\r\n  }, [coins, search, fav_coins]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { data } = await axios.get(\r\n        \"https://api.coingecko.com/api/v3/global\"\r\n      );\r\n      setGlobal(data.data);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const columns = [\r\n    \"market_cap_rank\",\r\n    \"name\",\r\n    \"current_price\",\r\n    \"price_change_percentage_24h\",\r\n    \"price_change_percentage_7d_in_currency\",\r\n    \"market_cap\",\r\n    \"total_volume\",\r\n    \"circulating_supply\",\r\n  ];\r\n\r\n  const sortColumn = (i) => {\r\n    let sortKey = columns[i];\r\n    let newFilteredCoins = [...filteredCoins];\r\n    if (sortType === \"Asc\") {\r\n      newFilteredCoins.sort((a, b) => {\r\n        const relValA = a[sortKey];\r\n        const relValB = b[sortKey];\r\n\r\n        if (relValA < relValB) return -1;\r\n        if (relValA > relValB) return 1;\r\n        return 0;\r\n      });\r\n      setSortType(\"Desc\");\r\n    } else {\r\n      newFilteredCoins.sort((a, b) => {\r\n        const relValA = a[sortKey];\r\n        const relValB = b[sortKey];\r\n\r\n        if (relValA > relValB) return -1;\r\n        if (relValA < relValB) return 1;\r\n        return 0;\r\n      });\r\n      setSortType(\"Asc\");\r\n    }\r\n    setFilteredCoins(newFilteredCoins);\r\n  };\r\n\r\n  const handleChange = (_, value) => {\r\n    setPage(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"coin-app\">\r\n      <div className=\"coin-search\">\r\n        <h2 className=\"coin-text\">\r\n          Today's Cryptocurrency Prices by Market Cap\r\n        </h2>\r\n        <p className=\"coin-global\">\r\n          The total active cryptocurrencies are{\" \"}\r\n          {global[\"active_cryptocurrencies\"]}, a{\" \"}\r\n          {global[\"market_cap_change_percentage_24h_usd\"] < 0 ? (\r\n            <span className=\"coin-percent red\">\r\n              {global[\"market_cap_change_percentage_24h_usd\"]?.toFixed(2)}%{\" \"}\r\n            </span>\r\n          ) : (\r\n            <span className=\"coin-percent green\">\r\n              {global[\"market_cap_change_percentage_24h_usd\"]?.toFixed(2)}%{\" \"}\r\n            </span>\r\n          )}\r\n          change over the last day.\r\n        </p>\r\n        <Form className=\"search-box d-flex\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"q\"\r\n            placeholder=\"Search in Current Page\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            className=\"search-bar\"\r\n          ></Form.Control>\r\n        </Form>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          width: \"70%\",\r\n          justifyContent: \"space-evenly\",\r\n          alignItems: \"center\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <label>Select currency: </label> &nbsp;\r\n          <SelectCurrency\r\n            value={currencyCode}\r\n            onChange={(e) => setCurrencyCode(e.target.value)}\r\n          />\r\n        </div>\r\n        <Dropdown style={{ display: \"flex\" }}>\r\n          <label>Show rows: </label> &nbsp;\r\n          <Dropdown.Toggle\r\n            variant=\"info\"\r\n            id=\"dropdown-basic\"\r\n            style={{ padding: \"4px 8px\" }}\r\n          >\r\n            {pageSize}\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu>\r\n            <Dropdown.Item onClick={() => setPageSize(100)}>100</Dropdown.Item>\r\n            <Dropdown.Item onClick={() => setPageSize(50)}>50</Dropdown.Item>\r\n            <Dropdown.Item onClick={() => setPageSize(10)}>10</Dropdown.Item>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </div>\r\n      <Tabs active=\"cryptocurrencies\" />\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <ErrorMessage variant=\"danger\">{error}</ErrorMessage>\r\n      ) : (\r\n        <>\r\n          <Table striped hover responsive>\r\n            <thead>\r\n              <tr>\r\n                <th class=\"sort-link\"></th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(0)}>\r\n                  #\r\n                </th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(1)}>\r\n                  Name\r\n                </th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(2)}>\r\n                  Price\r\n                </th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(3)}>\r\n                  24h%\r\n                </th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(4)}>\r\n                  7d%\r\n                </th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(5)}>\r\n                  Market Cap\r\n                </th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(6)}>\r\n                  Volume(24h)\r\n                </th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(7)}>\r\n                  Circulating Supply\r\n                </th>\r\n                <th>Last 7 days</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredCoins.map((coin) => {\r\n                return (\r\n                  <Coin\r\n                    _id={coin.market_cap_rank}\r\n                    key={coin.id}\r\n                    coin_id={coin.id}\r\n                    name={coin.name}\r\n                    price={coin.current_price}\r\n                    symbol={coin.symbol}\r\n                    marketcap={coin.market_cap}\r\n                    volume={coin.total_volume}\r\n                    image={coin.image}\r\n                    pricechange24h={coin.price_change_percentage_24h}\r\n                    pricechange7d={coin.price_change_percentage_7d_in_currency}\r\n                    circulatingsupply={coin.circulating_supply}\r\n                    graphdata={coin.sparkline_in_7d}\r\n                    code={currencyCode}\r\n                    isFav={coin.isFav}\r\n                  />\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n          <Pagination\r\n            count={Math.floor(9100 / pageSize)}\r\n            page={page}\r\n            onChange={handleChange}\r\n            size=\"large\"\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            showFirstButton\r\n            showLastButton\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { login } from \"../actions/userActions\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { error, loading, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group className=\"mt-3\" controlId=\"email\">\r\n          <Form.Label>Email Address:</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mt-3\" controlId=\"password\">\r\n          <Form.Label>Password:</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n            required\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" className=\"mt-3\" variant=\"primary\">\r\n          Sign in\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          New Customer?{\" \"}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;","import getSymbolFromCurrency from \"currency-symbol-map\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Alert, Col, Row, Table, Button } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport ChartProg from \"../components/ChartProg\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nconst PredictionOutScreen = () => {\r\n  const [coin, setCoin] = useState({});\r\n\r\n  const cryptoCoins = useSelector((state) => state.cryptoCoins);\r\n  const { crypto_coin, crypto_pred } = cryptoCoins;\r\n\r\n  const cryptoCoinsList = useSelector((state) => state.cryptoCoinsList);\r\n  const { cryptolist } = cryptoCoinsList;\r\n\r\n  const history = useHistory();\r\n  const { state } = useLocation();\r\n\r\n  const getCoin = () => {\r\n    if (cryptolist.length) {\r\n      for (let crypto of cryptolist) {\r\n        if (crypto_coin?.name === crypto?.id) {\r\n          setCoin(crypto);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCoin();\r\n  }, [cryptolist, crypto_coin]);\r\n\r\n  return (\r\n    <>\r\n      {crypto_pred ? (\r\n        <div>\r\n          {crypto_pred && crypto_pred.length ? (\r\n            <>\r\n              <Row className=\"coin-info\">\r\n                <Col md=\"9\">\r\n                  <Row>\r\n                    <Col md=\"auto\">\r\n                      <img src={coin?.image} alt=\"\" />\r\n                    </Col>\r\n                    <Col md=\"auto\">\r\n                      <h2>\r\n                        {coin?.name}{\" \"}\r\n                        <span className=\"symbol\">({coin?.symbol})</span>\r\n                      </h2>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col md=\"auto\">\r\n                      <small className=\"coin-data\">\r\n                        Rank #{coin?.market_cap_rank}\r\n                      </small>{\" \"}\r\n                      &nbsp;\r\n                    </Col>\r\n                    <Col md=\"auto\">\r\n                      <small className=\"coin-data\">Coin</small>\r\n                    </Col>\r\n                    <Col md=\"auto\"></Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n              <Alert variant=\"success\">\r\n                <h3 className=\"coin-text\">\r\n                  Marketcap Value Prediction is → $\r\n                  {crypto_pred[0]?.toLocaleString()}\r\n                </h3>\r\n              </Alert>\r\n              <center>\r\n                <Button\r\n                  type=\"submit\"\r\n                  onClick={() => history.push(\"/predict\")}\r\n                  variant=\"primary\"\r\n                >\r\n                  ← &nbsp; Go Back to Predict\r\n                </Button>\r\n              </center>\r\n            </>\r\n          ) : (\r\n            <center>\r\n              <Button\r\n                type=\"submit\"\r\n                onClick={() => history.push(\"/predict\")}\r\n                variant=\"primary\"\r\n              >\r\n                ← &nbsp; Go Back to Predict\r\n              </Button>\r\n            </center>\r\n          )}\r\n          <br />\r\n          <br />\r\n          <Row>\r\n            <Col md=\"8\">\r\n              <h2 style={{ marginBottom: \"14px\" }}>{coin?.name} 7day Chart</h2>\r\n              {coin?.price_change_percentage_7d_in_currency < 0 ? (\r\n                <div style={{ width: \"900px\", height: \"600px\" }}>\r\n                  <ChartProg\r\n                    dataprog={coin?.sparkline_in_7d}\r\n                    crypto={coin?.name}\r\n                    legend\r\n                    display\r\n                    color=\"red\"\r\n                    stepped\r\n                    fill={false}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <ChartProg\r\n                    dataprog={coin?.sparkline_in_7d}\r\n                    crypto={coin?.name}\r\n                    legend\r\n                    display\r\n                    color=\"green\"\r\n                    stepped\r\n                    fill={false}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Col>\r\n            <Col md=\"4\">\r\n              <Row>\r\n                <h2>Investers Input</h2>\r\n                <Table>\r\n                  <tr>\r\n                    <td>Input Date</td>\r\n                    <td>\r\n                      <b>{state?.date}</b>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Input Volume</td>\r\n                    <td>\r\n                      <b>\r\n                        {getSymbolFromCurrency(\"usd\")}\r\n                        {state?.volume}\r\n                      </b>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Input Closing Price</td>\r\n                    <td>\r\n                      <b>\r\n                        {getSymbolFromCurrency(\"usd\")}\r\n                        {state?.closePrice}\r\n                      </b>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Input Opening Price</td>\r\n                    <td>\r\n                      <b>\r\n                        {getSymbolFromCurrency(\"usd\")}\r\n                        {state?.openPrice}\r\n                      </b>\r\n                    </td>\r\n                  </tr>\r\n                </Table>\r\n              </Row>\r\n              <Row>\r\n                <h2>{coin?.name} Market Data</h2>\r\n                <Table>\r\n                  <tr>\r\n                    <td>Today's Marketcap</td>\r\n                    <td>\r\n                      <b>\r\n                        {getSymbolFromCurrency(\"usd\")}\r\n                        {coin?.market_cap}\r\n                      </b>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>24 Hour Marketcap Change</td>\r\n                    <td>\r\n                      <b>\r\n                        {getSymbolFromCurrency(\"usd\")}\r\n                        {coin?.market_cap_change_24h}\r\n                      </b>\r\n                    </td>\r\n                  </tr>\r\n                  {/* <tr>\r\n                <td>Current Price</td>\r\n                <td>\r\n                  <b>\r\n                    {getSymbolFromCurrency(\"usd\")}\r\n                    {coin?.current_price}\r\n                  </b>\r\n                </td>\r\n              </tr> */}\r\n                </Table>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PredictionOutScreen;\r\n","import React from \"react\";\r\nimport \"../styles/Coin.css\";\r\nimport getSymbolFromCurrency from \"currency-symbol-map\";\r\nimport StarOutlineIcon from \"@material-ui/icons/StarOutline\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport { getCoinById, updateFavCoins } from \"../actions/coinActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport ChartProg from \"./ChartProg\";\r\nimport PredictionInput from \"./PredictionInput\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Prediction = ({\r\n  name,\r\n  price,\r\n  symbol,\r\n  marketcap,\r\n  volume,\r\n  image,\r\n  pricechange7d,\r\n  _id,\r\n  graphdata,\r\n  code,\r\n  coin_id,\r\n  isFav,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const history = useHistory();\r\n  const redirectToLogin = () => {\r\n    if (userInfo) dispatch(updateFavCoins(coin_id));\r\n    else history.push(\"/login\");\r\n  };\r\n  const getCryptoId = (id) => {\r\n    dispatch(getCoinById(id));\r\n  };\r\n  return (\r\n    <tr key={_id}>\r\n      <td className=\"starability\">\r\n        {!isFav ? (\r\n          <StarOutlineIcon onClick={() => redirectToLogin()} />\r\n        ) : (\r\n          <StarIcon onClick={() => redirectToLogin()} />\r\n        )}\r\n      </td>\r\n      <td>{_id}</td>\r\n      <td className=\"coin\">\r\n        <img src={image} alt=\"\" />\r\n        <Link to={`/crypto/${coin_id}`}><span onClick={() => getCryptoId(coin_id)} className='coin-name'>{name}</span></Link> &nbsp; <span className=\"mt-1\">{symbol}</span>\r\n      </td>\r\n      <td>\r\n        {getSymbolFromCurrency(code)}\r\n        {price?.toLocaleString()}\r\n      </td>\r\n\r\n      <td>\r\n        {getSymbolFromCurrency(code)}\r\n        {marketcap?.toLocaleString()}\r\n      </td>\r\n      <td>\r\n        {getSymbolFromCurrency(code)}\r\n        {volume?.toLocaleString()}\r\n      </td>\r\n\r\n      {pricechange7d < 0 ? (\r\n        <td>\r\n          <ChartProg dataprog={graphdata} crypto={name} color=\"red\" legend={false} />\r\n        </td>\r\n      ) : (\r\n        <td>\r\n          <ChartProg dataprog={graphdata} crypto={name} color=\"green\" legend={false} />\r\n        </td>\r\n      )}\r\n\r\n      <td className=\"predict-btn\">\r\n        <PredictionInput coin_id={coin_id}/>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Prediction;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../styles/HomeScreen.css\";\r\nimport { Form, Table } from \"react-bootstrap\";\r\nimport {\r\n  getCryptoCoins,\r\n  getFavCoins,\r\n  listCryptoCoins,\r\n} from \"../actions/coinActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SelectCurrency from \"react-select-currency\";\r\nimport Tabs from \"../components/Tabs\";\r\nimport Prediction from \"../components/Prediction\";\r\n\r\nfunction PredictionScreen() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [currencyCode, setCurrencyCode] = useState(\"USD\");\r\n  const dispatch = useDispatch();\r\n  const cryptoCoinsList = useSelector((state) => state.cryptoCoinsList);\r\n  const { error, loading, cryptolist } =\r\n    cryptoCoinsList;\r\n\r\n  const favCoins = useSelector((state) => state.favCoins);\r\n  const { fav_coins } = favCoins;\r\n\r\n  const cryptoCoins = useSelector((state) => state.cryptoCoins);\r\n  const { crypto_coins } =\r\n    cryptoCoins;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [sortType, setSortType] = useState(\"Asc\");\r\n  const [filteredCoins, setFilteredCoins] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (userInfo) dispatch(getFavCoins());\r\n  }, [dispatch, userInfo]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCryptoCoins());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (crypto_coins.length)\r\n      dispatch(listCryptoCoins(currencyCode, crypto_coins));\r\n  }, [dispatch, currencyCode, crypto_coins]);\r\n\r\n  useEffect(() => {\r\n    for (let coin of cryptolist) {\r\n      coin[\"isFav\"] = false;\r\n    }\r\n    setFilteredCoins(cryptolist);\r\n  }, [userInfo, fav_coins, cryptolist]);\r\n\r\n  useEffect(() => {\r\n    let filterCoins = cryptolist.filter((coin) =>\r\n      coin.name.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n\r\n    if (fav_coins.length) {\r\n      for (let fav of fav_coins) {\r\n        for (let coin of filterCoins) {\r\n          if (fav.coin === coin.id) {\r\n            coin[\"isFav\"] = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    setFilteredCoins(filterCoins);\r\n  }, [cryptolist, search, fav_coins]);\r\n\r\n  const columns = [\r\n    \"market_cap_rank\",\r\n    \"name\",\r\n    \"current_price\",\r\n    \"market_cap\",\r\n    \"total_volume\",\r\n  ];\r\n\r\n  const sortColumn = (i) => {\r\n    let sortKey = columns[i];\r\n    let newFilteredCoins = [...filteredCoins];\r\n    if (sortType === \"Asc\") {\r\n      newFilteredCoins.sort((a, b) => {\r\n        const relValA = a[sortKey];\r\n        const relValB = b[sortKey];\r\n\r\n        if (relValA < relValB) return -1;\r\n        if (relValA > relValB) return 1;\r\n        return 0;\r\n      });\r\n      setSortType(\"Desc\");\r\n    } else {\r\n      newFilteredCoins.sort((a, b) => {\r\n        const relValA = a[sortKey];\r\n        const relValB = b[sortKey];\r\n\r\n        if (relValA > relValB) return -1;\r\n        if (relValA < relValB) return 1;\r\n        return 0;\r\n      });\r\n      setSortType(\"Asc\");\r\n    }\r\n    setFilteredCoins(newFilteredCoins);\r\n  };\r\n\r\n  return (\r\n    <div className=\"coin-app\">\r\n      <div className=\"coin-search\">\r\n        <h2 className=\"coin-text\">Cryptocurrency Market Cap Prediction Page</h2>\r\n        <p className=\"coin-global\">\r\n          The total available cryptocurrencies for prediction are{\" \"}\r\n          <span className=\"coin-percent green\">{crypto_coins.length}</span>.\r\n        </p>\r\n        <Form className=\"search-box d-flex\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"q\"\r\n            placeholder=\"Search\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            className=\"search-bar\"\r\n          ></Form.Control>\r\n        </Form>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          width: \"70%\",\r\n          justifyContent: \"space-evenly\",\r\n          alignItems: \"center\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <label>Select currency: </label> &nbsp;\r\n          <SelectCurrency\r\n            value={currencyCode}\r\n            onChange={(e) => setCurrencyCode(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Tabs active=\"prediction\" />\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <ErrorMessage variant=\"danger\">{error}</ErrorMessage>\r\n      ) : (\r\n        <>\r\n          <Table striped hover responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"sort-link\"></th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(0)}>\r\n                  #\r\n                </th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(1)}>\r\n                  Name\r\n                </th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(2)}>\r\n                  Price\r\n                </th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(3)}>\r\n                  Market Cap\r\n                </th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(4)}>\r\n                  Volume(24h)\r\n                </th>\r\n                <th>Last 7 days</th>\r\n                <th>Predict</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredCoins.map((coin) => {\r\n                return (\r\n                  <Prediction\r\n                    _id={coin.market_cap_rank}\r\n                    key={coin.id}\r\n                    coin_id={coin.id}\r\n                    name={coin.name}\r\n                    price={coin.current_price}\r\n                    symbol={coin.symbol}\r\n                    marketcap={coin.market_cap}\r\n                    volume={coin.total_volume}\r\n                    image={coin.image}\r\n                    code={currencyCode}\r\n                    pricechange7d={coin.price_change_percentage_7d_in_currency}\r\n                    graphdata={coin.sparkline_in_7d}\r\n                    isFav={coin.isFav}\r\n                  />\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PredictionScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { register } from \"../actions/userActions\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const userRegister = useSelector(state => state.userRegister);\r\n  const { error, loading, userInfo } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) setMessage(\"Passwords do not match\");\r\n    else if (\r\n      window.confirm(\r\n        \"Are you sure you wanna register with the given credentials?\"\r\n      )\r\n    )\r\n      dispatch(register(name, email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Register</h1>\r\n      {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group className=\"mt-3\" controlId=\"name\">\r\n          <Form.Label>Name:</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"name\"\r\n            placeholder=\"Enter Name\"\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mt-3\" controlId=\"email\">\r\n          <Form.Label>Email Address:</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mt-3\" controlId=\"password\">\r\n          <Form.Label>Password:</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mt-3\" controlId=\"confirmPassword\">\r\n          <Form.Label>Confirm Password:</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            onChange={e => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\r\n\r\n        <Button type=\"submit\" className=\"mt-3\" variant=\"primary\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Have an Account?{\" \"}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/register\"}>\r\n            Sign In\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport Loader from \"../components/Loader\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error, loading, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push(\"/admin/userlist\");\r\n    } else {\r\n      if (!user.name || user._id !== Number(userId)) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [user, userId, successUpdate, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateUser({\r\n        _id: user._id,\r\n        name,\r\n        email,\r\n        isAdmin,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/admin/userlist\">\r\n        <Button className=\"mt-3\" variant=\"primary\">\r\n          Go Back\r\n        </Button>\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && (\r\n          <ErrorMessage variant=\"danger\">{errorUpdate}</ErrorMessage>\r\n        )}\r\n\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <ErrorMessage variant=\"danger\">{error}</ErrorMessage>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group className=\"mt-3\" controlId=\"name\">\r\n              <Form.Label>Name:</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mt-3\" controlId=\"email\">\r\n              <Form.Label>Email Address:</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mt-3\" controlId=\"isadmin\">\r\n              <Form.Label>Is Admin:</Form.Label>\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                // label=\"Is Admin\"\r\n                style={{ marginLeft: \"4%\", marginTop: \"2%\" }}\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"info\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { deleteUser, listUsers } from \"../actions/userActions\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { error, loading, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: deleteSuccess } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) dispatch(listUsers());\r\n    else history.push(\"/login\");\r\n  }, [dispatch, history, deleteSuccess, userInfo]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this user?!\"))\r\n      dispatch(deleteUser(id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <ErrorMessage variant=\"danger\">{error}</ErrorMessage>\r\n      ) : (\r\n        <Table striped bordered hover responsive size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th>EDIT/DELETE</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      <i className=\"fas fa-edit\"></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    className=\"btn-sm\"\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className=\"fas fa-trash\"></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Coin from \"../components/Coin\";\r\nimport { Form, Table } from \"react-bootstrap\";\r\nimport { getFavCoins, listFavCoins } from \"../actions/coinActions\";\r\nimport Loader from \"../components/Loader\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SelectCurrency from \"react-select-currency\";\r\n\r\nfunction WatchListScreen() {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [currencyCode, setCurrencyCode] = useState(\"USD\");\r\n  const dispatch = useDispatch();\r\n  const favCoins = useSelector((state) => state.favCoins);\r\n  const { fav_coins } = favCoins;\r\n\r\n  const watchList = useSelector((state) => state.watchList);\r\n  const { error, loading } = watchList;\r\n  let { watchlist } = watchList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const [sortType, setSortType] = useState(\"Asc\");\r\n  const [filteredCoins, setFilteredCoins] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (userInfo) dispatch(getFavCoins());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (fav_coins.length) dispatch(listFavCoins(currencyCode, fav_coins));\r\n    else watchlist = [];\r\n  }, [dispatch, currencyCode, fav_coins]);\r\n\r\n  useEffect(() => {\r\n    for (let coin of watchlist) {\r\n      coin[\"isFav\"] = false;\r\n    }\r\n    setFilteredCoins(watchlist);\r\n  }, [userInfo, fav_coins]);\r\n\r\n  useEffect(() => {\r\n    let filterCoins = watchlist.filter((coin) =>\r\n      coin.name.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n\r\n    if (fav_coins.length) {\r\n      for (let fav of fav_coins) {\r\n        for (let coin of filterCoins) {\r\n          if (fav.coin === coin.id) {\r\n            coin[\"isFav\"] = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    setFilteredCoins(filterCoins);\r\n  }, [watchlist, search, fav_coins]);\r\n\r\n  const columns = [\r\n    \"market_cap_rank\",\r\n    \"name\",\r\n    \"current_price\",\r\n    \"price_change_percentage_24h\",\r\n    \"price_change_percentage_7d_in_currency\",\r\n    \"market_cap\",\r\n    \"total_volume\",\r\n    \"circulating_supply\",\r\n  ];\r\n\r\n  const sortColumn = (i) => {\r\n    let sortKey = columns[i];\r\n    let newFilteredCoins = [...filteredCoins];\r\n    if (sortType === \"Asc\") {\r\n      newFilteredCoins.sort((a, b) => {\r\n        const relValA = a[sortKey];\r\n        const relValB = b[sortKey];\r\n\r\n        if (relValA < relValB) return -1;\r\n        if (relValA > relValB) return 1;\r\n        return 0;\r\n      });\r\n      setSortType(\"Desc\");\r\n    } else {\r\n      newFilteredCoins.sort((a, b) => {\r\n        const relValA = a[sortKey];\r\n        const relValB = b[sortKey];\r\n\r\n        if (relValA > relValB) return -1;\r\n        if (relValA < relValB) return 1;\r\n        return 0;\r\n      });\r\n      setSortType(\"Asc\");\r\n    }\r\n    setFilteredCoins(newFilteredCoins);\r\n  };\r\n\r\n  return (\r\n    <div className=\"coin-app\">\r\n      <div className=\"coin-search\">\r\n        <h2 className=\"coin-text\">Main Watch List</h2>\r\n        <p className=\"coin-global\">\r\n          Keep track of your favourite cryptocurrencies.\r\n        </p>\r\n        <Form className=\"search-box d-flex\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"q\"\r\n            placeholder=\"Search in Current Page\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n            className=\"search-bar\"\r\n          ></Form.Control>\r\n        </Form>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          width: \"70%\",\r\n          justifyContent: \"space-evenly\",\r\n          alignItems: \"center\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            marginBottom: \"25px\",\r\n          }}\r\n        >\r\n          <label>Select currency: </label> &nbsp;\r\n          <SelectCurrency\r\n            value={currencyCode}\r\n            onChange={(e) => setCurrencyCode(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <ErrorMessage variant=\"danger\">{error}</ErrorMessage>\r\n      ) : filteredCoins.length === 0 ? (\r\n        <ErrorMessage variant=\"info\">You have no favourite coins.</ErrorMessage>\r\n      ) : (\r\n        <>\r\n          <Table striped hover responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"sort-link\"></th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(0)}>\r\n                  #\r\n                </th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(1)}>\r\n                  Name\r\n                </th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(2)}>\r\n                  Price\r\n                </th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(3)}>\r\n                  24h%\r\n                </th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(4)}>\r\n                  7d%\r\n                </th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(5)}>\r\n                  Market Cap\r\n                </th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(6)}>\r\n                  Volume(24h)\r\n                </th>\r\n                <th className=\"sort-link\" onClick={() => sortColumn(7)}>\r\n                  Circulating Supply\r\n                </th>\r\n                <th>Last 7 days</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredCoins.map((coin) => {\r\n                return (\r\n                  <Coin\r\n                    _id={coin.market_cap_rank}\r\n                    key={coin.id}\r\n                    coin_id={coin.id}\r\n                    name={coin.name}\r\n                    price={coin.current_price}\r\n                    symbol={coin.symbol}\r\n                    marketcap={coin.market_cap}\r\n                    volume={coin.total_volume}\r\n                    image={coin.image}\r\n                    pricechange24h={coin.price_change_percentage_24h}\r\n                    pricechange7d={coin.price_change_percentage_7d_in_currency}\r\n                    circulatingsupply={coin.circulating_supply}\r\n                    graphdata={coin.sparkline_in_7d}\r\n                    code={currencyCode}\r\n                    isFav={coin.isFav}\r\n                  />\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WatchListScreen;\r\n","import { Container } from \"react-bootstrap\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport Footer from \"./components/Footer\";\r\nimport Header from \"./components/Header\";\r\nimport CategoryScreen from \"./screens/CategoryScreen\";\r\nimport CoinScreen from \"./screens/CoinScreen\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport PredictionOutScreen from \"./screens/PredictionOutScreen\";\r\nimport PredictionScreen from \"./screens/PredictionScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport UserEditScreen from \"./screens/UserEditScreen\";\r\nimport UserListScreen from \"./screens/UserListScreen\";\r\nimport WatchListScreen from \"./screens/WatchListScreen\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Route path=\"/\" component={HomeScreen} exact />\r\n          <Route path=\"/login\" component={LoginScreen} />\r\n          <Route path=\"/register\" component={RegisterScreen} />\r\n          <Route path=\"/category\" component={CategoryScreen} />\r\n          <Route path=\"/predict\" component={PredictionScreen} />\r\n          <Route path=\"/watchlist\" component={WatchListScreen} />\r\n          <Route path=\"/prediction\" component={PredictionOutScreen} />\r\n          <Route path=\"/crypto/:id\" component={CoinScreen} />\r\n\r\n          <Route path=\"/admin/userlist\" component={UserListScreen} />\r\n          <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\"; // lets you write async logic that interacts with the store.\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport {\r\n  userDeleteReducer,\r\n  userDetailsReducer,\r\n  userListReducer,\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userUpdateProfileReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducer\";\r\nimport {\r\n  coinListReducer,\r\n  cryptoCoinReducer,\r\n  cryptoCoinsListReducer,\r\n  cryptoCoinsReducer,\r\n  favCoinsReducer,\r\n  watchListReducer,\r\n} from \"./reducers/coinReducers\";\r\nimport { categoryListReducer } from \"./reducers/categoryReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userUpdate: userUpdateReducer,\r\n  userDelete: userDeleteReducer,\r\n  coinList: coinListReducer,\r\n  cryptoCoin: cryptoCoinReducer,\r\n  watchList: watchListReducer,\r\n  cryptoCoinsList: cryptoCoinsListReducer,\r\n  cryptoCoins: cryptoCoinsReducer,\r\n  favCoins: favCoinsReducer,\r\n  categoryList: categoryListReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAILURE,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAILURE,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAILURE,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAILURE,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAILURE,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAILURE,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAILURE,\r\n  USER_UPDATE_RESET,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n\r\n    case USER_LOGIN_FAILURE:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_LOGOUT:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n\r\n    case USER_REGISTER_FAILURE:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_LOGOUT:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n\r\n    case USER_DETAILS_FAILURE:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n\r\n    case USER_UPDATE_PROFILE_FAILURE:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n\r\n    case USER_LIST_FAILURE:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_LIST_RESET:\r\n      return { users: [] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case USER_UPDATE_FAILURE:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_UPDATE_RESET:\r\n      return { user: {} };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case USER_DELETE_FAILURE:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  COIN_DATA_FAILURE,\r\n  COIN_DATA_REQUEST,\r\n  COIN_DATA_SUCCESS,\r\n  CRYPTO_COIN_DATA_FAILURE,\r\n  CRYPTO_COIN_DATA_REQUEST,\r\n  CRYPTO_COIN_DATA_SUCCESS,\r\n  FAV_COINS,\r\n  FAV_COIN_DATA_FAILURE,\r\n  FAV_COIN_DATA_REQUEST,\r\n  FAV_COIN_DATA_SUCCESS,\r\n  GET_CRYPTO_COINS,\r\n  GET_FAV_COINS,\r\n  REMOVE_FAV_COIN,\r\n  DELETE_FAV_COINS,\r\n  GET_CRYPTO_COIN,\r\n  GET_PREDICTION,\r\n  COIN_INFO_REQUEST,\r\n  COIN_INFO_SUCCESS,\r\n  COIN_INFO_FAILURE,\r\n} from \"../constants/coinConstants\";\r\n\r\nexport const coinListReducer = (\r\n  state = {\r\n    coins: [],\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case COIN_DATA_REQUEST:\r\n      return { ...state, loading: true, coins: [] };\r\n\r\n    case COIN_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        coins: action.payload,\r\n      };\r\n\r\n    case COIN_DATA_FAILURE:\r\n      return { ...state, loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const cryptoCoinReducer = (state = { crypto: [] }, action) => {\r\n  switch (action.type) {\r\n    case COIN_INFO_REQUEST:\r\n      return { ...state, loading: true, crypto: [] };\r\n\r\n    case COIN_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        crypto: action.payload,\r\n      };\r\n\r\n    case COIN_INFO_FAILURE:\r\n      return { ...state, loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const watchListReducer = (state = { watchlist: [] }, action) => {\r\n  switch (action.type) {\r\n    case FAV_COIN_DATA_REQUEST:\r\n      return { ...state, loading: true, watchlist: [] };\r\n\r\n    case FAV_COIN_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        watchlist: action.payload,\r\n      };\r\n\r\n    case FAV_COIN_DATA_FAILURE:\r\n      return { ...state, loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const cryptoCoinsListReducer = (state = { cryptolist: [] }, action) => {\r\n  switch (action.type) {\r\n    case CRYPTO_COIN_DATA_REQUEST:\r\n      return { ...state, loading: true, cryptolist: [] };\r\n\r\n    case CRYPTO_COIN_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        cryptolist: action.payload,\r\n      };\r\n\r\n    case CRYPTO_COIN_DATA_FAILURE:\r\n      return { ...state, loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const cryptoCoinsReducer = (state = { crypto_coins: [] }, action) => {\r\n  switch (action.type) {\r\n    case GET_CRYPTO_COINS:\r\n      return { ...state, crypto_coins: action.payload };\r\n\r\n    case GET_CRYPTO_COIN:\r\n      return { ...state, crypto_coin: action.payload };\r\n\r\n    case GET_PREDICTION:\r\n      return { ...state, crypto_pred: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const favCoinsReducer = (state = { fav_coins: [] }, action) => {\r\n  switch (action.type) {\r\n    case GET_FAV_COINS:\r\n      return { ...state, fav_coins: action.payload };\r\n\r\n    case REMOVE_FAV_COIN:\r\n      return {\r\n        ...state,\r\n        fav_coins: state.fav_coins.filter(\r\n          (coin) => coin.coin !== action.payload\r\n        ),\r\n      };\r\n\r\n    case FAV_COINS:\r\n      return { ...state, fav_coins: [...state.fav_coins, action.payload] };\r\n\r\n    case DELETE_FAV_COINS:\r\n      return { ...state, fav_coins: [] };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n    CATEGORY_DATA_FAILURE,\r\n    CATEGORY_DATA_REQUEST,\r\n    CATEGORY_DATA_SUCCESS,\r\n} from \"../constants/categoryConstants\";\r\n\r\nexport const categoryListReducer = (state = { categories: [] }, action) => {\r\n    switch (action.type) {\r\n        case CATEGORY_DATA_REQUEST:\r\n            return { loading: true, categories: [] };\r\n\r\n        case CATEGORY_DATA_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                categories: action.payload,\r\n            };\r\n\r\n        case CATEGORY_DATA_FAILURE:\r\n            return { loading: false, error: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from 'react-redux'\r\nimport \"./index.css\";\r\nimport \"./bootstrap.min.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./store\";\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}